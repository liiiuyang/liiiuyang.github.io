<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sk8erBoi的笔记</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.leavel.cn/"/>
  <updated>2022-05-02T13:25:48.653Z</updated>
  <id>https://www.leavel.cn/</id>
  
  <author>
    <name>Sk8erBoi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux压测环境搭建（Jmeter）及压测</title>
    <link href="https://www.leavel.cn/article/20220502.html"/>
    <id>https://www.leavel.cn/article/20220502.html</id>
    <published>2022-05-02T13:18:01.000Z</published>
    <updated>2022-05-02T13:25:48.653Z</updated>
    
    <content type="html"><![CDATA[<p>环境：Centos7<br>Jmeter: <a href="https://jmeter.apache.org/download_jmeter.cgi" target="_blank" rel="noopener">Apache JMeter - Download Apache JMeter</a><br>JDK:在线安装 yum install jdk</p><a id="more"></a> <h3 id="一-安装JDK"><a href="#一-安装JDK" class="headerlink" title="一.安装JDK"></a>一.安装JDK</h3><p>1.yum search java|grep jdk   #下载jdk<br>2.yum install -y java-1.8.0-openjdk*<br>3.java -version javac            #查看是否安装成功  </p><pre><code>[root@localhost ]# which java  /usr/bin/java  [root@localhost ]# ls -lr /usr/bin/java  lrwxrwxrwx. 1 root root 22 6月 29 10:30 /usr/bin/java -&gt; /etc/alternatives/java  [root@localhost ]# ls -lr /etc/alternatives/java  lrwxrwxrwx. 1 root root 73 6月 29 10:30 /etc/alternatives/java -&gt; /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.292.b10-1.el7_9.x86_64/jre/bin/java</code></pre><h3 id="二-配置环境变量"><a href="#二-配置环境变量" class="headerlink" title="二.配置环境变量"></a>二.配置环境变量</h3><p>① vi /etc/profile #打开环境编辑的文件</p><p>② 在文件最后加上这四行</p><pre><code>export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.322.b06-1.el7_9.x86_64export JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH</code></pre><p>/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.322.b06-1.el7_9.x86_64/jre/bin/java</p><p>③ :wq //保存并退出文件</p><p>④ source /etc/profile //使文件生效</p><p>⑤ echo $JAVA_HOME //验证是否编辑成功</p><h3 id="三-上传Jmeter压缩包，解压"><a href="#三-上传Jmeter压缩包，解压" class="headerlink" title="三.上传Jmeter压缩包，解压"></a>三.上传Jmeter压缩包，解压</h3><p>1.unzip file.zip #解压缩file.zip文件</p><h3 id="四-压测"><a href="#四-压测" class="headerlink" title="四.压测"></a>四.压测</h3><pre><code>1.#运行jmeter脚本/home/apache-jmeter-5.4.3/bin/jmeter.sh -n -t /jmx/jmxscript/historicTaskList.jmx -l /jmx/jmxscript/report/historicTaskList2000.jtl -JthreadCount=2000 -JrampUp=2 -JkeepTime=3002.#将测试结果.jtl文件转换为html/home/apache-jmeter-5.4.3/bin/jmeter.sh -g /jmx/jmxscript/report/historicTaskList2000.jtl -e -o /jmx/jmxscript/report/historicTaskList20003.#将文件夹压缩 把xx路径下的historicTaskList2000文件夹压缩后放到xx路径zip -q -r /jmx/jmxscript/report/result/historicTaskList2000.zip /jmx/jmxscript/report/historicTaskList2000/</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;环境：Centos7&lt;br&gt;Jmeter: &lt;a href=&quot;https://jmeter.apache.org/download_jmeter.cgi&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Apache JMeter - Download Apache JMeter&lt;/a&gt;&lt;br&gt;JDK:在线安装 yum install jdk&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="jmeter" scheme="https://www.leavel.cn/tags/jmeter/"/>
    
      <category term="linux" scheme="https://www.leavel.cn/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>软件测试面试题目</title>
    <link href="https://www.leavel.cn/article/20220315.html"/>
    <id>https://www.leavel.cn/article/20220315.html</id>
    <published>2022-03-15T10:51:32.000Z</published>
    <updated>2022-03-15T11:40:12.751Z</updated>
    
    <content type="html"><![CDATA[<p><strong>简单记一下：</strong><br><strong>测试流程有哪些：</strong><br>1.需求评审<br>2.测试计划<br>3.编写测试用例</p><a id="more"></a> <p>4.测试用例评审<br>5.系统测试<br>6.生成测试报告</p><p><strong>测试用例的七个方法</strong></p><p>1.基于需求的设计方法<br>依据看客户需求设计测试用例<br>2.等价类<br>依据需求将输入划分为若干等价类，从等价类中选定一个测试用例，如果该测试用例通过，则表明整个等价类通过测试。<br>3.边界值<br>边界值法是对输入数据的边界测试，是一种黑盒测试方法；一般来说边界值法是对等价类划分后的补充<br>4.因果图<br>因果图是一种简化的逻辑图，能够表示输入条件和输出结果之间的关系。<br>5.错误猜测法<br>错误猜测法是基于经验和直觉推测程序中所有可能存在的各种错误，从而有针对性的设计测试用例。列举出程序中所有可能有的错误和容易发生错误的特殊情况,根据他们选择测试用例。<br>6.场景设计法<br>目前的大多数软件的事件触发来控制流程的，我们可通过想象事件触发时的情景形成流程，依据同一事件不同的触发顺序和结果形成事件流，再依据事件流设计测试用例。<br>一般场景设计法与需求设计法结合使用，能够将多个孤立的功能联系在一起<br>7.正交排列</p><p><strong>自动化测试</strong><br><strong>八大元素定位</strong><br>find_element_by_name()<br>find_element_by_id()<br>find_element_by_class_name()<br>find_element_by_tag_name()<br>find_element_by_link_text()<br>find_element_by_partial_link_text()<br>find_element_by_xpath()<br>find_element_by_css_selector()</p><p>模拟键盘操作定位<br><a href="https://www.cnblogs.com/dcszhangsir/p/13566819.html" target="_blank" rel="noopener">selenium模拟键盘操作大全 - 多测师张sir - 博客园 (cnblogs.com)</a></p><p><strong>动态元素如何定位</strong><br>xpath定位<br>①//input[@name=’account’]</p><p>②//*[@name=’accout’]</p><p>③ 定位下拉框 //li//span[text()=’男’]</p><p>④ (//li//span[text()=’在职’])[1] 选第一个</p><p>⑤//li//span[text()=’在职’]/a[last()] 选最后一个</p><p>⑥//li//span[text()=’在职’]/a[last()-1] 选倒数第二个</p><p><strong>常见的异常解决手段</strong><br>1.元素没有找到（定位错误，没有添加等待，iframe未切换）<br>2.元素无法正常交互（页面是否最大化，是否需要滚动条，是否需要悬停）<br>3.超时（显示等待超时因为元素有误，窗体最大化超时）<br>4.创建session失败（检查浏览器版本与driver是否匹配）</p><p><strong>http协议状态码：</strong><br>1xx 请求成功，继续处理<br>2xx 请求发送成功<br>3xx 重定向<br>4xx 客户端错误<br>5xx 服务端错误</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;简单记一下：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;测试流程有哪些：&lt;/strong&gt;&lt;br&gt;1.需求评审&lt;br&gt;2.测试计划&lt;br&gt;3.编写测试用例&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="软件测试" scheme="https://www.leavel.cn/tags/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Python + Selenium自动化测试练习</title>
    <link href="https://www.leavel.cn/article/20220220.html"/>
    <id>https://www.leavel.cn/article/20220220.html</id>
    <published>2022-02-20T11:28:14.000Z</published>
    <updated>2022-02-20T12:47:53.854Z</updated>
    
    <content type="html"><![CDATA[<p> <strong>Python + Selenium自动化测试练习</strong><br> 实现的功能</p><h6 id="1-登录"><a href="#1-登录" class="headerlink" title="1.登录"></a>1.登录</h6><h6 id="2-将未读信息标记为已读"><a href="#2-将未读信息标记为已读" class="headerlink" title="2.将未读信息标记为已读"></a>2.将未读信息标记为已读</h6><h6 id="3-将未处理的任务全部通过"><a href="#3-将未处理的任务全部通过" class="headerlink" title="3.将未处理的任务全部通过"></a>3.将未处理的任务全部通过</h6><a id="more"></a> <p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4j.png" alt="" title="1.登录"></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4k.png" alt="" title="2.标记消息"></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4l.png" alt="" title="3.双击进入任务"></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4m.png" alt="" title="4.通过任务"></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4p.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4n.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4q.png" alt=""></p><p><img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2022/02/20/9V4o.png" alt=""></p><p>main.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"><span class="keyword">import</span> defaultFunction</span><br><span class="line"><span class="keyword">import</span> autoMarkMsg</span><br><span class="line"><span class="keyword">import</span> autoPassTask</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置隐性等待时间（最大等待时间10s）</span></span><br><span class="line">defaultFunction.driver.implicitly_wait(<span class="number">10</span>)</span><br><span class="line">defaultFunction.driver.get(defaultFunction.url)</span><br><span class="line"><span class="comment"># 利用Tab键和Enter键实现登录</span></span><br><span class="line"><span class="comment"># DefaultFunction.driver.find_element(By.CSS_SELECTOR, '.login-form input[data-v-5f194660]').send_keys(user, Keys.TAB, password, Keys.ENTER)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用XPath定位实现登录</span></span><br><span class="line">defaultFunction.driver.find_element(By.XPATH, <span class="string">'//*[@placeholder="请输入手机号"]'</span>).send_keys(defaultFunction.user)</span><br><span class="line">defaultFunction.driver.find_element(By.XPATH, <span class="string">'//*[@placeholder="请输入密码"]'</span>).send_keys(defaultFunction.password)</span><br><span class="line">defaultFunction.driver.find_element(By.XPATH, <span class="string">'//*[@type="button"]'</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 标记未读消息</span></span><br><span class="line">sleep(<span class="number">2</span>)</span><br><span class="line">num_str = autoMarkMsg.autoMark(defaultFunction.driver)</span><br><span class="line">print(num_str)</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 通过未处理的任务</span></span><br><span class="line">pass_num_task = autoPassTask.passTask(defaultFunction.driver)</span><br><span class="line">print(pass_num_task)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待10秒后退出浏览器</span></span><br><span class="line">sleep(<span class="number">10</span>)</span><br><span class="line">defaultFunction.driver.quit()</span><br></pre></td></tr></table></figure><p>defaultFunction.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line">user = <span class="string">'13280xxxxxxx'</span></span><br><span class="line">password = <span class="string">'xxxxx'</span></span><br><span class="line"><span class="comment"># 开发环境</span></span><br><span class="line"><span class="comment"># url = 'http://58.56.xxxxxxxxx/#/login'</span></span><br><span class="line"><span class="comment"># 生产环境</span></span><br><span class="line">url = <span class="string">'http://59.46.xxxxxxxxxx/#/login'</span></span><br><span class="line">driver = webdriver.Chrome()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个函数判断是否存在某个值</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">isElementExist</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="string">""""判断是否存在某个值"""</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        driver.find_element(By.XPATH, s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        e</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></table></figure><p>autoPassTask.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要引入ActionChains类,里面有鼠标调用的方法</span></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.action_chains <span class="keyword">import</span> ActionChains</span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> defaultFunction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">passTask</span><span class="params">(driver)</span>:</span></span><br><span class="line">    <span class="string">"""处理未通过的任务"""</span></span><br><span class="line">    <span class="comment"># 循环</span></span><br><span class="line">    pass_num_task = <span class="string">'当前无未处理任务'</span></span><br><span class="line">    <span class="keyword">if</span> defaultFunction.isElementExist(<span class="string">'//div[2]/div[2]/div[1]/div[3]/table/tbody/tr[1]/td[2]/div'</span>):</span><br><span class="line">        <span class="keyword">for</span> m <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">            <span class="comment"># 双击打开消息</span></span><br><span class="line">            element = driver.find_element(By.XPATH, <span class="string">'//div[2]/div[2]/div[1]/div[3]/table/tbody/tr[1]/td[2]/div'</span>)</span><br><span class="line">            <span class="comment"># 需要睡眠</span></span><br><span class="line">            sleep(<span class="number">1</span>)</span><br><span class="line">            ActionChains(driver).double_click(element).perform()</span><br><span class="line">            sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 循环检查打开的流程中是否还存在相关元素</span></span><br><span class="line">            <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">                <span class="comment"># 调用判断函数</span></span><br><span class="line">                is_exist = defaultFunction.isElementExist(<span class="string">'//form[2]/div[1]/div/label[2]'</span>)</span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 如果存在消息按钮就执行</span></span><br><span class="line">                <span class="keyword">if</span> is_exist:</span><br><span class="line">                    sleep(<span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># 选中通过消息按钮</span></span><br><span class="line">                    driver.find_element(By.XPATH, <span class="string">'//form[2]/div[1]/div/label[2]'</span>).click()</span><br><span class="line">                    sleep(<span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># 点击提交</span></span><br><span class="line">                    driver.find_element(By.XPATH, <span class="string">'//div[2]/form[2]/div[3]/div/button[1]/span'</span>).click()</span><br><span class="line">                    sleep(<span class="number">1</span>)</span><br><span class="line">                    <span class="comment"># 确认提交</span></span><br><span class="line">                    driver.find_element(By.XPATH, <span class="string">'//div/div[3]/button[2]/span'</span>).click()</span><br><span class="line">                    sleep(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 如果已经没有该元素，则提前跳出循环，进入下一步</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                <span class="comment"># 循环的速度很快，如果不加等待时间容易获取不到元素报错</span></span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 循环的速度很快，如果不加等待时间容易获取不到元素报错</span></span><br><span class="line">            sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 点击返回按钮</span></span><br><span class="line">            driver.find_element(By.XPATH, <span class="string">'//div[2]/div[1]/button'</span>).click()</span><br><span class="line">            pass_num_task = <span class="string">f'已处理通过<span class="subst">&#123;m + <span class="number">1</span>&#125;</span>条任务'</span></span><br><span class="line">        sleep(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> pass_num_task</span><br></pre></td></tr></table></figure><p>autoMarkMsg.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> selenium.webdriver.common.by <span class="keyword">import</span> By</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> defaultFunction</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">autoMark</span><span class="params">(driver)</span>:</span></span><br><span class="line">    <span class="string">"""标记未读消息函数"""</span></span><br><span class="line">    <span class="comment"># 判断如果有未读消息就标记未读消息两条</span></span><br><span class="line">    num_str = <span class="string">'当前无未读消息'</span></span><br><span class="line">    <span class="keyword">if</span> defaultFunction.isElementExist(<span class="string">'//div[3]/div[2]/div[1]/div[3]/table/tbody/tr[1]/td[1]/div/label/span/span'</span>):</span><br><span class="line">        <span class="comment"># 循环</span></span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">            <span class="keyword">if</span> defaultFunction.isElementExist(</span><br><span class="line">                    <span class="string">'//div[3]/div[2]/div[1]/div[3]/table/tbody/tr[1]/td[1]/div/label/span/span'</span>):</span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 选中消息</span></span><br><span class="line">                driver.find_element(By.XPATH,</span><br><span class="line">                                    <span class="string">'//div[3]/div[2]/div[1]/div[3]/table/tbody/tr[1]/td[1]/div/label/span/span'</span>).click()</span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 点击已读按钮</span></span><br><span class="line">                driver.find_element(By.XPATH, <span class="string">'//div[2]/div/div[1]/div[3]/div[1]/div/button[1]/span'</span>).click()</span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">                <span class="comment"># 确定按钮</span></span><br><span class="line">                driver.find_element(By.XPATH, <span class="string">'//div[3]/div/div[3]/button[2]/span'</span>).click()</span><br><span class="line">                <span class="comment"># 循环的速度很快，如果不加等待时间容易获取不到元素报错</span></span><br><span class="line">                sleep(<span class="number">1</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            num_str = <span class="string">f'已经标为已读<span class="subst">&#123;n + <span class="number">1</span>&#125;</span>条'</span></span><br><span class="line">        sleep(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">return</span> num_str</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt; &lt;strong&gt;Python + Selenium自动化测试练习&lt;/strong&gt;&lt;br&gt; 实现的功能&lt;/p&gt;
&lt;h6 id=&quot;1-登录&quot;&gt;&lt;a href=&quot;#1-登录&quot; class=&quot;headerlink&quot; title=&quot;1.登录&quot;&gt;&lt;/a&gt;1.登录&lt;/h6&gt;&lt;h6 id=&quot;2-将未读信息标记为已读&quot;&gt;&lt;a href=&quot;#2-将未读信息标记为已读&quot; class=&quot;headerlink&quot; title=&quot;2.将未读信息标记为已读&quot;&gt;&lt;/a&gt;2.将未读信息标记为已读&lt;/h6&gt;&lt;h6 id=&quot;3-将未处理的任务全部通过&quot;&gt;&lt;a href=&quot;#3-将未处理的任务全部通过&quot; class=&quot;headerlink&quot; title=&quot;3.将未处理的任务全部通过&quot;&gt;&lt;/a&gt;3.将未处理的任务全部通过&lt;/h6&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://www.leavel.cn/tags/Python/"/>
    
      <category term="Selenium" scheme="https://www.leavel.cn/tags/Selenium/"/>
    
      <category term="自动化测试" scheme="https://www.leavel.cn/tags/%E8%87%AA%E5%8A%A8%E5%8C%96%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>随便记记03</title>
    <link href="https://www.leavel.cn/article/20211109.html"/>
    <id>https://www.leavel.cn/article/20211109.html</id>
    <published>2021-11-09T11:28:14.000Z</published>
    <updated>2021-11-09T12:09:22.147Z</updated>
    
    <content type="html"><![CDATA[<p><strong><a href="https://www.runoob.com/linux/nginx-install-setup.html" target="_blank" rel="noopener">Nginx 安装配置</a></strong> </p><p><strong><a href="https://www.runoob.com/linux/mysql-install-setup.html" target="_blank" rel="noopener">MySQL 安装配置</a></strong> </p><a id="more"></a> <p>在Linux上安装Tomcat服务器 yum install xxx</p><p>安装JDK</p><p>安装数据库</p><p>运行数据库的脚本</p><p>设置权限</p><p>将打包好的项目War包放入到Webapps文件夹中</p><p>设置文件读写权限  chmod + *.sh</p><p>修改数据库配置文件</p><p>关闭防火墙 service firewalld stop</p><p>启动tomcat服务器</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.runoob.com/linux/nginx-install-setup.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nginx 安装配置&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://www.runoob.com/linux/mysql-install-setup.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MySQL 安装配置&lt;/a&gt;&lt;/strong&gt; &lt;/p&gt;
    
    </summary>
    
    
    
      <category term="测试环境部署" scheme="https://www.leavel.cn/tags/%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E9%83%A8%E7%BD%B2/"/>
    
      <category term="Linux" scheme="https://www.leavel.cn/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>随便记记02</title>
    <link href="https://www.leavel.cn/article/20210614.html"/>
    <id>https://www.leavel.cn/article/20210614.html</id>
    <published>2021-06-14T10:37:14.000Z</published>
    <updated>2021-11-09T11:27:00.332Z</updated>
    
    <content type="html"><![CDATA[<p>当打开组合框的下拉列表时发生。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> comboxIndex = <span class="number">-1</span>;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DropDown</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 获取第一次combobox中的值的索引</span></span><br><span class="line">comboxIndex = cbValue.SelectedIndex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ComboBox_SelectionChanged</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cbValue.Equals(<span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 如果选中不符合条件的项目，恢复到默认</span></span><br><span class="line">ErrorMessageBox.Show(msg);</span><br><span class="line">cbValue.SelectedIndex = comboxIndex;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">readonly</span> <span class="keyword">string</span>[]  _requestColumns = </span><br><span class="line">&#123;</span><br><span class="line">ColumnNames.A, ColumnNames.B, ColumnNames.C, ColumnNames.D</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> columnValueList = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line"><span class="keyword">var</span> dataRow = Table.Rows[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">var</span> requestColumn <span class="keyword">in</span> _requestColumns)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">var</span> columnValue  = dataRow[requestColumn].ToString();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">string</span>.IsNullOrEmpty(columnValue))</span><br><span class="line">    &#123;</span><br><span class="line">     columnValueList.Add(columnValue);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> collection)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (item == <span class="string">"A"</span>)</span><br><span class="line">&#123;<span class="comment">// 跳出循环</span></span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (item == <span class="string">"B"</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//  ToDo...</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;当打开组合框的下拉列表时发生。&lt;/p&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; comboxIndex = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;DropDown&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;object&lt;/span&gt; sender, EventArgs e&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;// 获取第一次combobox中的值的索引&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	comboxIndex = cbValue.SelectedIndex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="C#" scheme="https://www.leavel.cn/tags/C/"/>
    
      <category term="WPF" scheme="https://www.leavel.cn/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>随便记记01</title>
    <link href="https://www.leavel.cn/article/20210418.html"/>
    <id>https://www.leavel.cn/article/20210418.html</id>
    <published>2021-04-18T13:45:02.000Z</published>
    <updated>2021-11-09T11:26:04.531Z</updated>
    
    <content type="html"><![CDATA[<h4 id="override-与重载（overload）的区别"><a href="#override-与重载（overload）的区别" class="headerlink" title="override 与重载（overload）的区别"></a>override 与重载（overload）的区别</h4><p>1.重载是方法的名称相同。参数或参数类型不同，进行多次重载以适应不同的需要。重载（overload）是面向过程的概念。<br>2.Override 是进行基类中函数的重写。Override 是面向对象的概念</p><a id="more"></a><h4 id="C-中值类型与引用类型"><a href="#C-中值类型与引用类型" class="headerlink" title="C#中值类型与引用类型"></a>C#中值类型与引用类型</h4><p>1.值类型：struct、enum、int、float、char、bool、decimal 引用类型：class、delegate、interface、array、object、string</p><h4 id="C-中类-class-与结构-struct-的异同"><a href="#C-中类-class-与结构-struct-的异同" class="headerlink" title="C#中类(class)与结构(struct)的异同"></a>C#中类(class)与结构(struct)的异同</h4><p>1.class 可以被实例化,属于引用类型, class 可以实现接口和单继承其他类,还可以作为基类型,是分配在内存的堆上的 struct 属于值类型,不能作为基类型,但是可以实现接口,是分配在内存的栈上的.</p><h4 id="C-中参数传递-ref-与-out-的区别"><a href="#C-中参数传递-ref-与-out-的区别" class="headerlink" title="C#中参数传递 ref 与 out 的区别"></a>C#中参数传递 ref 与 out 的区别</h4><p>1.ref 指定的参数在函数调用时必须先初始化，而 out 不用<br>2.out 指定的参数在进入函数时会清空自己，因此必须在函数内部进行初始化赋值操作，而 ref 不用 总结：ref 可以把值传到方法里，也可以把值传到方法外；out 只可以把值传到方法外 注意：string 作为特殊的引用类型，其操作是与值类型看齐的，若要将方法内对形参赋值后的结果传递出来，需要加上 ref 或 out 关键字。</p><h4 id="C-中-static-关键字的作用"><a href="#C-中-static-关键字的作用" class="headerlink" title="C# 中 static 关键字的作用"></a>C# 中 static 关键字的作用</h4><p>对类有意义的字段和方法使用 static 关键字修饰，称为静态成员，通过类名加访问操作符“.”进行访问; 对类的实例有意义的字段和方法不加 static 关键字，称为非静态成员或实例成员。 注: 静态字段在内存中只有一个拷贝，非静态字段则是在每个实例对象中拥有一个拷贝。而方法无论是否为静态，在内存中只会有一份拷贝，区别只是通过类名来访问还是通过实例名来访问。</p><h4 id="字符串中-string-str-null-和-string-str-””和-string-str-string-Empty-的区别"><a href="#字符串中-string-str-null-和-string-str-””和-string-str-string-Empty-的区别" class="headerlink" title="字符串中 string str=null 和 string str=””和 string str=string.Empty 的区别"></a>字符串中 string str=null 和 string str=””和 string str=string.Empty 的区别</h4><p>string.Empty 相当于“”,Empty 是一个静态只读的字段。 string str=”” ,初始化对象，并分配一个空字符串的内存空间 string str=null,初始化对象，不会分配内存空间</p><h4 id="const-和-readonly-的区别"><a href="#const-和-readonly-的区别" class="headerlink" title="const 和 readonly 的区别"></a>const 和 readonly 的区别</h4><p>都可以标识一个常量。主要有以下区别： 1、初始化位置不同。const 必须在声明的同时赋值；readonly 即可以在声明处赋值; 2、修饰对象不同。const 即可以修饰类的字段，也可以修饰局部变量；readonly 只能修饰类的字段 3、const 是编译时常量，在编译时确定该值；readonly 是运行时常量，在运行时确定该值。 4、const 默认是静态的；而 readonly 如果设置成静态需要显示声明 5、修饰引用类型时不同，const 只能修饰 string 或值为 null 的其他引用类型；readonly 可以是任何类型。</p><h4 id="i-和-i-的区别"><a href="#i-和-i-的区别" class="headerlink" title="i++和++i 的区别"></a>i++和++i 的区别</h4><p>1.i++是先赋值，然后再自增；++i 是先自增，后赋值。 2.i=0，i++=0，++i=1； Console.WriteLine(++i==i++); 结果位 true</p><h4 id="C-成员修饰符"><a href="#C-成员修饰符" class="headerlink" title="C#成员修饰符"></a>C#成员修饰符</h4><p>abstract:指示该方法或属性没有实现。</p><p>const:指定域或局部变量的值不能被改动。</p><p>event:声明一个事件。</p><p>extern:指示方法在外部实现。</p><p>override:对由基类继承成员的新实现。</p><p>readonly:指示一个域只能在声明时以及相同类的内部被赋值。</p><p>static:指示一个成员属于类型本身,而不是属于特定的对象。</p><p>virtual:指示一个方法或存取器的实现可以在继承类中被覆盖。</p><h4 id="ADO-NET-常用对象"><a href="#ADO-NET-常用对象" class="headerlink" title="ADO.NET 常用对象"></a>ADO.NET 常用对象</h4><p>Connection：主要是开启程序和数据库之间的连接。没有利用连接对象将数据库打开，是无法从数据库中取得数据的。Close 和 Dispose 的区别，Close 以后还可以 Open，Dispose 以后则不能再用。</p><p>Command：主要可以用来对数据库发出一些指令，例如可以对数据库下达查询、新增、修改、删除数据等指令，以及调用存在数据库中的存储过程等。这个对象是架构在 Connection 对象上，也就是 Command： 对象是通过在 Connection 对象连接到数据源。</p><p>DataAdapter：主要是在数据源以及 DataSet 之间执行数据传输的工作，它可以透过 Command 对象下达命令后，并将取得的数据放入 DataSet 对象中。这个对象是架构在 Command 对象上，并提供了许多配合 DataSet 使用的功能。</p><p>DataSet：这个对象可以视为一个暂存区（Cache），可以把从数据库中所查询到的数据保留起来，甚至可以将整个数据库显示出来，DataSet 是放在内存中的。DataSet 的能力不只是可以储存多个 Table 而已，还可以透过 DataAdapter 对象取得一些例如主键等的数据表结构，并可以记录数据表间的关联。DataSet 对象可以说是<a href="http://ADO.NET" target="_blank" rel="noopener">http://ADO.NET</a> 中重量级的对象，这个对象架构在 DataAdapter 对象上，本身不具备和数据源沟通的能力；也就是说我们是将 DataAdapter 对象当做 DataSet 对象以及数据源间传输数据的桥梁。DataSet 包含若干 DataTable、DataTableTable 包含若干 DataRow。</p><p>DataReader：当我们只需要循序的读取数据而不需要其它操作时，可以使用 DataReader 对象。DataReader 对象只是一次一次向下循序的读取数据源中的数据，这些数据是存在数据库服务器中的，而不是一次性加载到程序的内存中的，只能（通过游标）读取当前行的数据，而且这些数据是只读的，并不允许作其它的操作。因为 DataReader 在读取数据的时候限制了每次只读取一条，而且只能只读，所以使用起来不但节省资源而且效率很好。使用 DataReader 对象除了效率较好之外，因为不用把数据全部传回，故可以降低网络的负载。</p><h4 id="数字格式化转换"><a href="#数字格式化转换" class="headerlink" title="数字格式化转换"></a>数字格式化转换</h4><p>可使用“0”和“#”占位符进行补位。“0” 表示位数不够位数就补充“0”，小数部分如果位数多了则会四舍五入；“#”表示占位，用于辅助“0”进行补位。如下例：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// “0”描述：占位符，如果可能，填充位</span></span><br><span class="line"> Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:000000&#125;"</span>, <span class="number">1234</span>)); <span class="comment">// 结果：001234</span></span><br><span class="line"><span class="comment">// “#”描述：占位符，如果可能，填充位</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:######&#125;"</span>, <span class="number">1234</span>));  <span class="comment">// 结果：1234</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:#0####&#125;"</span>, <span class="number">1234</span>));  <span class="comment">// 结果：01234</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:0#0####&#125;"</span>, <span class="number">1234</span>)); <span class="comment">// 结果：0001234</span></span><br><span class="line"><span class="comment">// "."描述：小数点</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:000.000&#125;"</span>, <span class="number">1234</span>));       <span class="comment">// 结果：1234.000</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:000.000&#125;"</span>, <span class="number">4321.12543</span>)); <span class="comment">// 结果：4321.125</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// ","描述：千分表示</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:0,0&#125;"</span>, <span class="number">1234567</span>));   <span class="comment">//结果：1,234,567</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// "%"描述：格式化为百分数</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:0%&#125;"</span>, <span class="number">1234</span>));        <span class="comment">// 结果：123400%</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:#%&#125;"</span>, <span class="number">1234.125</span>));   <span class="comment">// 结果：123413%</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:0.00%&#125;"</span>, <span class="number">1234</span>));     <span class="comment">// 结果：123400.00%</span></span><br><span class="line">Console.WriteLine(<span class="keyword">string</span>.Format(<span class="string">"&#123;0:#.00%&#125;"</span>, <span class="number">1234.125</span>)); <span class="comment">// 结果：123412.50%</span></span><br><span class="line">内置快捷字母格式化用法</span><br><span class="line"></span><br><span class="line"><span class="comment">// E-科学计数法表示</span></span><br><span class="line">Console.WriteLine((<span class="number">25000</span>).ToString(<span class="string">"E"</span>)); <span class="comment">// 结果：2.500000E+004</span></span><br><span class="line"><span class="comment">// C-货币表示，带有逗号分隔符，默认小数点后保留两位，四舍五入</span></span><br><span class="line">Console.WriteLine((<span class="number">2.5</span>).ToString(<span class="string">"C"</span>)); <span class="comment">// 结果：￥2.50</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// D[length]-十进制数</span></span><br><span class="line">Console.WriteLine((<span class="number">25</span>).ToString(<span class="string">"D5"</span>)); <span class="comment">// 结果：00025</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// F[precision]-浮点数，保留小数位数(四舍五入)</span></span><br><span class="line">Console.WriteLine((<span class="number">25</span>).ToString(<span class="string">"F2"</span>)); <span class="comment">// 结果：25.00</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// G[digits]-常规，保留指定位数的有效数字，四舍五入</span></span><br><span class="line">Console.WriteLine((<span class="number">2.52</span>).ToString(<span class="string">"G2"</span>)); <span class="comment">// 结果：2.5</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// N-带有逗号分隔符，默认小数点后保留两位，四舍五入</span></span><br><span class="line">Console.WriteLine((<span class="number">2500000</span>).ToString(<span class="string">"N"</span>)); <span class="comment">// 结果：2,500,000.00</span></span><br><span class="line">​</span><br><span class="line"><span class="comment">// X-十六进制，非整型将产生格式异常</span></span><br><span class="line">Console.WriteLine((<span class="number">255</span>).ToString(<span class="string">"X"</span>)); <span class="comment">// 结果</span></span><br><span class="line">ToString 也可以自定义补零格式化：</span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">Console.WriteLine((<span class="number">15</span>).ToString(<span class="string">"000"</span>));              <span class="comment">// 结果：015</span></span><br><span class="line">Console.WriteLine((<span class="number">15</span>).ToString(<span class="string">"value is 0"</span>));       <span class="comment">// 结果：value is 15</span></span><br><span class="line">Console.WriteLine((<span class="number">10.456</span>).ToString(<span class="string">"0.00"</span>));         <span class="comment">// 结果：10.46</span></span><br><span class="line">Console.WriteLine((<span class="number">10.456</span>).ToString(<span class="string">"00"</span>));           <span class="comment">// 结果：10</span></span><br><span class="line">Console.WriteLine((<span class="number">10.456</span>).ToString(<span class="string">"value is 0.0"</span>)); <span class="comment">// 结果：value is 10.5</span></span><br></pre></td></tr></table></figure><h4 id="字符串拼接、字符串内插法"><a href="#字符串拼接、字符串内插法" class="headerlink" title="字符串拼接、字符串内插法"></a>字符串拼接、字符串内插法</h4><p>将数组中的字符串拼接成一个字符串：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> parts = <span class="keyword">new</span>[] &#123; <span class="string">"Foo"</span>, <span class="string">"Bar"</span>, <span class="string">"Fizz"</span>, <span class="string">"Buzz"</span>&#125;;</span><br><span class="line"><span class="keyword">var</span> joined = <span class="keyword">string</span>.Join(<span class="string">", "</span>, parts);</span><br><span class="line"><span class="comment">// joined = "Foo, Bar, Fizz, Buzz"</span></span><br></pre></td></tr></table></figure><p>以下四种方式都可以达到相同的字符串拼接的目的：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> first = <span class="string">"Hello"</span>;</span><br><span class="line">stringsecond = <span class="string">"World"</span>;</span><br><span class="line"><span class="keyword">string</span> foo = first + <span class="string">" "</span> + second;</span><br><span class="line"><span class="keyword">string</span> foo = <span class="keyword">string</span>.Concat(first, <span class="string">" "</span>, second);</span><br><span class="line"><span class="keyword">string</span> foo = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125; &#123;1&#125;"</span>, firstname, lastname);</span><br><span class="line"><span class="keyword">string</span> foo = <span class="string">$"<span class="subst">&#123;firstname&#125;</span> <span class="subst">&#123;lastname&#125;</span>"</span>;</span><br></pre></td></tr></table></figure><p>字符串内插法简单用法：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> name = <span class="string">"World"</span>;</span><br><span class="line"><span class="keyword">var</span> str =<span class="string">$"Hello, <span class="subst">&#123;name&#125;</span>!"</span>;</span><br><span class="line"><span class="comment">// str = "Hello, World!"</span></span><br></pre></td></tr></table></figure><p>带日期格式化</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> date = DateTime.Now;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">$"Today is <span class="subst">&#123;date:yyyy-MM-dd&#125;</span>！"</span>;</span><br></pre></td></tr></table></figure><p>补齐格式化（Padding）：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> number = <span class="number">42</span>;</span><br><span class="line"><span class="comment">// 向左补齐</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">$"The answer to life, the universe and everything is <span class="subst">&#123;number,<span class="number">5</span>&#125;</span>."</span>;</span><br><span class="line"><span class="comment">// str = "The answer to life, the universe and everything is ___42." ('_'表示空格)</span></span><br><span class="line"><span class="comment">// 向右补齐</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">$"The answer to life, the universe and everything is $<span class="subst">&#123;number,<span class="number">-5</span>&#125;</span>."</span>;</span><br><span class="line"><span class="comment">// str = "The answer to life, the universe and everything is 42___."</span></span><br></pre></td></tr></table></figure><p>结合内置快捷字母格式化：</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> amount = <span class="number">2.5</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">$"It costs <span class="subst">&#123;amount:C&#125;</span>"</span>;</span><br><span class="line"><span class="comment">// str = "￥2.50"</span></span><br><span class="line"><span class="keyword">var</span> number = <span class="number">42</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">$"The answer to life, the universe and everything is <span class="subst">&#123;number,<span class="number">5</span>:f1&#125;</span>."</span>;</span><br><span class="line"><span class="comment">// str = "The answer to life, the universe and everything is ___42.1"</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;override-与重载（overload）的区别&quot;&gt;&lt;a href=&quot;#override-与重载（overload）的区别&quot; class=&quot;headerlink&quot; title=&quot;override 与重载（overload）的区别&quot;&gt;&lt;/a&gt;override 与重载（overload）的区别&lt;/h4&gt;&lt;p&gt;1.重载是方法的名称相同。参数或参数类型不同，进行多次重载以适应不同的需要。重载（overload）是面向过程的概念。&lt;br&gt;2.Override 是进行基类中函数的重写。Override 是面向对象的概念&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C#" scheme="https://www.leavel.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C# Path.Combine方法代码示例</title>
    <link href="https://www.leavel.cn/article/20210128.html"/>
    <id>https://www.leavel.cn/article/20210128.html</id>
    <published>2021-01-28T13:41:35.000Z</published>
    <updated>2021-04-25T12:52:51.988Z</updated>
    
    <content type="html"><![CDATA[<h4 id="C-Path-Combine"><a href="#C-Path-Combine" class="headerlink" title="C# Path.Combine"></a>C# Path.Combine</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> s1 = Path.Combine(<span class="string">"D:"</span>, <span class="string">"file.txt"</span>); <span class="comment">// D:file.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> s2 = Path.Combine(<span class="string">"D:\\"</span>, <span class="string">"file.txt"</span>); <span class="comment">// D:\file.txt</span></span><br><span class="line"><span class="keyword">string</span> s3 = Path.Combine(<span class="string">"D:\\dir"</span>, <span class="string">"file.txt"</span>); <span class="comment">// D:\dir\file.txt</span></span><br><span class="line"><span class="keyword">string</span> s4 = Path.Combine(<span class="string">"D:\\dir\\"</span>, <span class="string">"file.txt"</span>); <span class="comment">// D:\dir\file.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> s5 = Path.Combine(<span class="string">"D:"</span>, <span class="string">"/file.txt"</span>); <span class="comment">// /file.txt</span></span><br><span class="line"><span class="keyword">string</span> s6 = Path.Combine(<span class="string">"D:\\"</span>, <span class="string">"\\file.txt"</span>); <span class="comment">// \file.txt</span></span><br><span class="line"><span class="keyword">string</span> s7 = Path.Combine(<span class="string">"D:\\dir\\"</span>, <span class="string">"/file.txt"</span>); <span class="comment">// /file.txt</span></span><br><span class="line"><span class="keyword">string</span> s8 = Path.Combine(<span class="string">"D:\\dir\\"</span>, <span class="string">"\\file.txt"</span>); <span class="comment">// \file.txt</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> fileDir = <span class="string">"C:\\Windows"</span>;</span><br><span class="line"><span class="keyword">var</span> fileDir2 = <span class="string">"C:\Windows"</span>; <span class="comment">//编译器直接报错</span></span><br><span class="line"><span class="keyword">var</span> fileName = <span class="string">"file.txt"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> filePath1= Path.Combine(<span class="string">@"C:\Windows"</span>, fileName);</span><br><span class="line"><span class="comment">// sendDir、fileName不能为空</span></span><br><span class="line"><span class="keyword">var</span> filePath2 = Path.Combine(fileDir, fileName);</span><br><span class="line"><span class="keyword">if</span> (File.Exists(filePath1))</span><br><span class="line">&#123;</span><br><span class="line">File.Delete(filePath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;C-Path-Combine&quot;&gt;&lt;a href=&quot;#C-Path-Combine&quot; class=&quot;headerlink&quot; title=&quot;C# Path.Combine&quot;&gt;&lt;/a&gt;C# Path.Combine&lt;/h4&gt;&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s1 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// D:file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s2 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// D:\file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s3 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\dir&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// D:\dir\file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s4 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\dir\\&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// D:\dir\file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s5 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;/file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// /file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s6 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\\file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// \file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s7 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\dir\\&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;/file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// /file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt; s8 = Path.Combine(&lt;span class=&quot;string&quot;&gt;&quot;D:\\dir\\&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;\\file.txt&quot;&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// \file.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fileDir = &lt;span class=&quot;string&quot;&gt;&quot;C:\\Windows&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fileDir2 = &lt;span class=&quot;string&quot;&gt;&quot;C:\Windows&quot;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//编译器直接报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; fileName = &lt;span class=&quot;string&quot;&gt;&quot;file.txt&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; filePath1= Path.Combine(&lt;span class=&quot;string&quot;&gt;@&quot;C:\Windows&quot;&lt;/span&gt;, fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// sendDir、fileName不能为空&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; filePath2 = Path.Combine(fileDir, fileName);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (File.Exists(filePath1))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	File.Delete(filePath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="C#" scheme="https://www.leavel.cn/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#常用的排序方法</title>
    <link href="https://www.leavel.cn/article/20201108.html"/>
    <id>https://www.leavel.cn/article/20201108.html</id>
    <published>2020-11-08T02:04:53.000Z</published>
    <updated>2021-04-25T12:27:17.254Z</updated>
    
    <content type="html"><![CDATA[<h4 id="冒泡排序-Bubble-Sort"><a href="#冒泡排序-Bubble-Sort" class="headerlink" title="冒泡排序(Bubble Sort)"></a>冒泡排序(Bubble Sort)</h4><p>基本思路是：将相邻的记录的关键码进行比较，若前面记录的关键码大于后面记录的关键码，则将它们交换，否则不交换。</p><a id="more"></a> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="keyword">int</span>[] arrNum</span>)<span class="comment">//传递一个数组排序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrNum.Length<span class="number">-1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arrNum.Length<span class="number">-1</span>-i; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (arrNum[j]&gt;arrNum[j+<span class="number">1</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = arrNum[j];</span><br><span class="line">            arrNum[j] = arrNum[j+<span class="number">1</span>];</span><br><span class="line">            arrNum[j+<span class="number">1</span>] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Sort</span>(<span class="params"><span class="keyword">int</span>[] sortArray</span>)<span class="comment">//传递一个数组排序</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> swapped;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        swapped = <span class="literal">false</span>;<span class="comment">//如果不发生交换，do-while则跳出循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sortArray.Length - <span class="number">1</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (sortArray[i] &gt; sortArray[i + <span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> temp = sortArray[i];</span><br><span class="line">                sortArray[i] = sortArray[i + <span class="number">1</span>];</span><br><span class="line">                sortArray[i + <span class="number">1</span>] = temp;</span><br><span class="line">                swapped = <span class="literal">true</span>;<span class="comment">//如果发生交换，do-while则继续循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (swapped);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="简单选择排序-Simple-Select-Sort-算法"><a href="#简单选择排序-Simple-Select-Sort-算法" class="headerlink" title="简单选择排序(Simple Select Sort)算法"></a>简单选择排序(Simple Select Sort)算法</h4><p>基本思路是：<br>从左到右开始,以第一个元素 (i = 0) 作为 基准数,与后面的数作比较,找到比它小的数就置换位置,以此类推 ,以第二元素(i = 1) 作为 基准数,与后面的数比较,找到比它小的数就置换位置.直至循环结束.</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">InsertSort</span>(<span class="params"><span class="keyword">int</span>[] dataArray</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; dataArray.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> iValue = dataArray[i];</span><br><span class="line">        <span class="keyword">bool</span> isInsert = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">//拿到i位置的元素 跟前面所有的元素作比较</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (dataArray[j] &gt; iValue)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//如果发现比i大的,就让它向后移动</span></span><br><span class="line">                dataArray[j + <span class="number">1</span>] = dataArray[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//发现一个比i小的值就停下来</span></span><br><span class="line">                dataArray[j + <span class="number">1</span>] = iValue;</span><br><span class="line">                isInsert = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果i这个值最小,所有元素都向后移动一位了,就把这个元素放到 0 号索引上</span></span><br><span class="line">        <span class="keyword">if</span> (isInsert == <span class="literal">false</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dataArray[<span class="number">0</span>] = iValue;</span><br><span class="line">            Console.WriteLine(iValue);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h4><p>该方法的基本思想是：<br>1．先从数列中取出一个数作为基准数。<br>2．分区过程，将比这个数大的数全放到它的右边，小于或等于它的数全放到它的左边。<br>3．再对左右区间重复第二步，直到各区间只有一个数。</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">QuickSort</span>(<span class="params"><span class="keyword">int</span>[] dataArray, <span class="keyword">int</span> left, <span class="keyword">int</span> right</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (left &lt; right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//基准数， 把比它小或者等于它的 放在它的左边，然后把比它大的放在它的右边</span></span><br><span class="line">        <span class="keyword">int</span> x = dataArray[left];</span><br><span class="line">        <span class="keyword">int</span> i = left;</span><br><span class="line">        <span class="keyword">int</span> j = right;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt; j)<span class="comment">//当i==j的时候，说明我们找到了一个中间位置，这个中间位置就是基准数应该所在的位置 </span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//从后往前比较</span></span><br><span class="line">            <span class="comment">//找到了一个比基准数 小于或者等于的数子，应该把它放在x的左边</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (dataArray[j] &lt;= x)</span><br><span class="line">                &#123;</span><br><span class="line">                    dataArray[i] = dataArray[j];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    j--;<span class="comment">//向左移动 到下一个数字，然后做比较</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//从前往后</span></span><br><span class="line">            <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (dataArray[i] &gt; x)</span><br><span class="line">                &#123;</span><br><span class="line">                    dataArray[j] = dataArray[i];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//跳出循环 现在i==j i是中间位置</span></span><br><span class="line">        dataArray[i] = x;</span><br><span class="line">        QuickSort(dataArray, left, i - <span class="number">1</span>);<span class="comment">// left -i- right</span></span><br><span class="line">        QuickSort(dataArray, i + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Array-Sort"><a href="#Array-Sort" class="headerlink" title="Array.Sort()"></a>Array.Sort()</h4><p>From：<a href="https://docs.microsoft.com/en-US/dotnet/api/system.array.sort?view=netcore-3.1" target="_blank" rel="noopener">https://docs.microsoft.com/en-US/dotnet/api/system.array.sort?view=netcore-3.1</a></p><p>转载于：<a href="https://blog.csdn.net/qq_40985921/article/details/90727368" target="_blank" rel="noopener">https://blog.csdn.net/qq_40985921/article/details/90727368</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;冒泡排序-Bubble-Sort&quot;&gt;&lt;a href=&quot;#冒泡排序-Bubble-Sort&quot; class=&quot;headerlink&quot; title=&quot;冒泡排序(Bubble Sort)&quot;&gt;&lt;/a&gt;冒泡排序(Bubble Sort)&lt;/h4&gt;&lt;p&gt;基本思路是：将相邻的记录的关键码进行比较，若前面记录的关键码大于后面记录的关键码，则将它们交换，否则不交换。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="C#" scheme="https://www.leavel.cn/tags/C/"/>
    
      <category term="排序" scheme="https://www.leavel.cn/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>利用Hexo创建博客</title>
    <link href="https://www.leavel.cn/article/20201107.html"/>
    <id>https://www.leavel.cn/article/20201107.html</id>
    <published>2020-11-07T05:34:53.000Z</published>
    <updated>2021-04-25T12:48:59.296Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-创建GitHub仓库"><a href="#1-创建GitHub仓库" class="headerlink" title="1. 创建GitHub仓库"></a>1. 创建GitHub仓库</h3><p>仓库名必须为 xxxxx.github.io 格式;</p><a id="more"></a> <h3 id="2-全局安装hexo"><a href="#2-全局安装hexo" class="headerlink" title="2. 全局安装hexo"></a>2. 全局安装hexo</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 安装</span><br><span class="line">npm install hexo -g</span><br><span class="line">// 查看版本</span><br><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h3 id="3-初始化项目"><a href="#3-初始化项目" class="headerlink" title="3. 初始化项目"></a>3. 初始化项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 初始化</span><br><span class="line">hexo init</span><br><span class="line">// 本地运行</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="4-部署到github"><a href="#4-部署到github" class="headerlink" title="4. 部署到github"></a>4. 部署到github</h3><p>找到 _congif.yml，找到 deploy 字段并填写</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repository: https://github.com/liiiuyang/liiiuyang.github.io.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>修改完毕后 安装deployer工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>完成后再执行下面命令 推送到github仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>之后输入网址<a href="liiiuyang.github.io" title="liiiuyang.github.io">liiiuyang.github.io</a>就可以看到效果了</p><h3 id="5-新建文章"><a href="#5-新建文章" class="headerlink" title="5. 新建文章"></a>5. 新建文章</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new "Test" #新建文章</span><br></pre></td></tr></table></figure><p>在你的本地路径\source_posts\下会生成Test.md文件。用Markdown语法写下你的文章保存后执行如下指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>文章发布成功！</p><h3 id="6-将GitHub网址改成自己的域名"><a href="#6-将GitHub网址改成自己的域名" class="headerlink" title="6. 将GitHub网址改成自己的域名"></a>6. 将GitHub网址改成自己的域名</h3><p>本地仓库\source下新建一个CNAME(没有扩展名)文件填入内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 自己的域名</span><br><span class="line">https://www.lihua.cool</span><br></pre></td></tr></table></figure><p>将该文件推送到GitHub仓库</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1-创建GitHub仓库&quot;&gt;&lt;a href=&quot;#1-创建GitHub仓库&quot; class=&quot;headerlink&quot; title=&quot;1. 创建GitHub仓库&quot;&gt;&lt;/a&gt;1. 创建GitHub仓库&lt;/h3&gt;&lt;p&gt;仓库名必须为 xxxxx.github.io 格式;&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://www.leavel.cn/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>C#获取ListBox里的数据</title>
    <link href="https://www.leavel.cn/article/20200823.html"/>
    <id>https://www.leavel.cn/article/20200823.html</id>
    <published>2020-08-23T02:49:00.000Z</published>
    <updated>2021-04-25T12:47:12.673Z</updated>
    
    <content type="html"><![CDATA[<h3 id="C-获取ListBox里的数据"><a href="#C-获取ListBox里的数据" class="headerlink" title="C#获取ListBox里的数据"></a>C#获取ListBox里的数据</h3> <figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;<span class="keyword">string</span>&gt; SelectedFileNames</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">get</span></span><br><span class="line">&#123;</span><br><span class="line">List&lt;<span class="keyword">string</span>&gt; temp = <span class="keyword">new</span> List&lt;<span class="keyword">string</span>&gt;();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> listBox.SelectedItems)</span><br><span class="line">&#123;</span><br><span class="line">temp.Add(item.ToString());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//排序</span></span><br><span class="line">temp.Sort()</span><br><span class="line"><span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="DataTable的操作"><a href="#DataTable的操作" class="headerlink" title="DataTable的操作"></a>DataTable的操作</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> stuName = <span class="string">""</span>;<span class="comment">// X</span></span><br><span class="line"><span class="keyword">string</span> stuName = <span class="keyword">string</span>.Empty;<span class="comment">// √</span></span><br><span class="line">stuName.Equals(<span class="string">"Tom"</span>);<span class="comment">// √</span></span><br><span class="line"><span class="keyword">string</span>.IsNullOrEmpty(stuName);<span class="comment">// √</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 过滤 DataTable 中的数据</span></span><br><span class="line"><span class="keyword">var</span> filter = <span class="keyword">string</span>.Format(<span class="string">"ID = &#123;0&#125; AND STUNAME &lt;&gt; '&#123;1&#125;' AND AGE = &#123;2&#125; AND SEX IS NOT NULL"</span>, id, stuName, <span class="number">12</span>);</span><br><span class="line"><span class="keyword">var</span> stuRow = stuTable.Select(filter);</span><br><span class="line"><span class="comment">// 存在数据</span></span><br><span class="line"><span class="keyword">if</span> (stuRow.Length &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 克隆表结构</span></span><br><span class="line"><span class="keyword">var</span> itemStuTable = stuTable.Clone();</span><br><span class="line"><span class="comment">// 遍历过滤出的数据</span></span><br><span class="line"><span class="keyword">foreach</span>(DataRow row <span class="keyword">in</span> stuRow )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 添加数据到新表中</span></span><br><span class="line">itemStuTable.ImportRow(row);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果SchoolObject这个DataSet不存在这个表</span></span><br><span class="line"><span class="keyword">if</span>(!SchoolObject.Tables.Contains(TableNames.stuTable))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="调用Command，获取userid"><a href="#调用Command，获取userid" class="headerlink" title="调用Command，获取userid"></a>调用Command，获取userid</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> getUserNameCommand = <span class="keyword">new</span> GetUserNameCommand();</span><br><span class="line">getUserNameCommand.SetUser(userid);</span><br><span class="line"><span class="keyword">var</span> result = Context.Current.ExecuteUICommand(getUserNameCommand);</span><br><span class="line"><span class="keyword">var</span> userTable = result.Value.Tables[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">string</span> userid = userTable.Rows[<span class="number">0</span>][ColumnNames.USERID].ToString();</span><br></pre></td></tr></table></figure><h3 id="Command内容"><a href="#Command内容" class="headerlink" title="Command内容"></a>Command内容</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GetUserNameCommand</span> : <span class="title">ApiCommand</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> NAME = <span class="string">"GetUserName"</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">GetUserNameCommand</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">: <span class="title">base</span>(<span class="params">NAME</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Component = CommonAPI;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 取得したいユーザIDを設定</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="userid"&gt;</span>ユーザID/param&gt;</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetUser</span>(<span class="params"><span class="keyword">string</span> userid</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ArgumentUtil.SetValue(Argument, ColumnNames.USERID, userid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (DataRow rows <span class="keyword">in</span> tstList.Rows)</span><br><span class="line"><span class="keyword">foreach</span> (DataRowView rowView <span class="keyword">in</span> ttstRows)</span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> row <span class="keyword">in</span> e.Rows.Select(rowView =&gt; rowView.Row))</span><br></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dat0 = GetInf(data01, data02, data03, data04, <span class="literal">false</span>);</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data01"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data02"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data03"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="data04"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="multiFlag"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GetInf</span>(<span class="params"><span class="keyword">string</span> data01, <span class="keyword">string</span> data02, <span class="keyword">string</span> data03, <span class="keyword">string</span> data04, <span class="keyword">bool</span> multiFlag</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> List&lt;<span class="keyword">decimal</span>&gt; <span class="title">GetUserInf</span>(<span class="params">ListEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> DataTable <span class="title">GetUserInf</span>(<span class="params">IList&lt;DataRowView&gt; ttstRows</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">string</span> <span class="title">GetUserInf</span>(<span class="params"><span class="keyword">string</span> data01, <span class="keyword">string</span> data02, <span class="keyword">string</span> data03, <span class="keyword">string</span> data04</span>)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;C-获取ListBox里的数据&quot;&gt;&lt;a href=&quot;#C-获取ListBox里的数据&quot; class=&quot;headerlink&quot; title=&quot;C#获取ListBox里的数据&quot;&gt;&lt;/a&gt;C#获取ListBox里的数据&lt;/h3&gt; &lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; SelectedFileNames&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;get&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt; temp = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; List&amp;lt;&lt;span class=&quot;keyword&quot;&gt;string&lt;/span&gt;&amp;gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;foreach&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; listBox.SelectedItems)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;				temp.Add(item.ToString());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;comment&quot;&gt;//排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			temp.Sort()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;			&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; temp;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
    
      <category term="C#" scheme="https://www.leavel.cn/tags/C/"/>
    
      <category term="WPF" scheme="https://www.leavel.cn/tags/WPF/"/>
    
  </entry>
  
  <entry>
    <title>自动化测试</title>
    <link href="https://www.leavel.cn/article/20200805.html"/>
    <id>https://www.leavel.cn/article/20200805.html</id>
    <published>2020-08-05T10:37:14.000Z</published>
    <updated>2021-04-24T07:59:43.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自动化测试"><a href="#自动化测试" class="headerlink" title="自动化测试"></a>自动化测试</h2><p>open 打开网址 Target<br>click 点击 Target(id=kw ) （定位要点击的ID）<br>type 输入内容 Target (id=kw ) Value (要输入的内容)<br>click Target（id=su）<br>refresh 刷新 没有参数<br>goBack 返回<br>pause 暂停 Target(5000)单位为毫秒<br>windowMaximize 窗口最大化<br>select模拟人工单击下拉列表框 value(里面填定位到的值) label(里面填真实的值)<br>例：select Target name=CookieDate Value label=留一天<br>  clickAndWait（单击事件导致新的页面进行加载） css=input.lobtn<br>close 关闭</p><a id="more"></a> <h2 id="断言"><a href="#断言" class="headerlink" title="断言"></a>断言</h2><h4 id="四种模式"><a href="#四种模式" class="headerlink" title="四种模式"></a>四种模式</h4><ol><li>Assert 失败时，该测试终止</li><li>verify 失败时，测试继续进行，将错误记入</li><li>waitfor用于等待某些条件为变为真。可用于AJAX应用程序的测试，如果该条件为真，他们将立即成功执行，不为真时，则失败，暂停测试，直至超过当前所设定的超时时间，一般与timeout一起用</li><li>store定义变量，可以获取页面相关的元素进行判断<h4 id="五种手段"><a href="#五种手段" class="headerlink" title="五种手段"></a>五种手段</h4></li><li>Title获取页面标题</li><li>Value获取元素的值</li><li>Text获取元素文本信息</li><li>Table获得元素标签</li><li>ElementPresent获得当前元素</li></ol><p>断言常用的有（需要设置的断言鼠标右键–Show All Available Commands）<br>Command Target Value<br>assertTitle 百度一下<br>(验证标题是不是百度一下，如果不是，终止)<br>verifyTitle 百度一下<br>(验证标题是不是百度一下，如果不是，继续执行)</p><h2 id="python基础"><a href="#python基础" class="headerlink" title="python基础"></a>python基础</h2><p>  转义字符 print(“C:HYPERLINK “\\python37”\python37”)双斜杠意思为在C盘下的python37文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">my name is &#39;Jack&#39; and &quot;you&quot;</span><br><span class="line">print(&quot;my name is \&#39;Jack\&#39; and \&quot;you\&quot;&quot;)</span><br></pre></td></tr></table></figure><p>通过“\”转义出原来的字符</p><ol><li><p>数组定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student&#x3D;[&#39;Jack&#39;,&#39;Rose&#39;,&#39;Ben&#39;,&#39;Ella&#39;]</span><br><span class="line">print(student)</span><br></pre></td></tr></table></figure></li><li><p>访问数组元素<br><code>print(student[0])</code></p></li><li><p>-1访问最后一个元素<br><code>print(student[-1])</code></p></li><li><p>数组元素的添加与修改</p></li><li><p>末尾追加元素</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student&#x3D;[&quot;jack&quot;,&quot;rose&quot;,&quot;ann&quot;,&quot;ben&quot;]</span><br><span class="line">student.append(&#39;mike&#39;)</span><br></pre></td></tr></table></figure></li><li><p>指定位置添加元素<br><code>student.insert(0,&quot;hello&quot;)</code></p></li><li><p>修改元素<br>`student[1]=”Jack”</p></li><li><p>删除末尾元素<br><code>student.pop()</code></p></li><li><p>删除指定元素(第四个)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student.pop(3)</span><br><span class="line">print(student)</span><br></pre></td></tr></table></figure></li><li><p>元组（Tuple）</p></li></ol><p>元组与数组类似，不同之处在于元组的元素一旦定义就不能修改。数组使用【】，元组使用（）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">course&#x3D;(&quot;Chinese&quot;,&quot;Math&quot;,&quot;English&quot;,&quot;History&quot;)</span><br><span class="line">print(course)</span><br><span class="line">print(course[0])</span><br><span class="line">print(course[1:3])</span><br><span class="line">print(course[1:]) &#x2F;&#x2F;显示索引1之后全部元素</span><br><span class="line">print(course[:2])</span><br></pre></td></tr></table></figure><ol start="11"><li><p>元组的个数<br><code>print(len(course))</code></p></li><li><p>要定义只有一个元素的元组需要在元素后面加一个逗号，用来消除数学歧义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">t&#x3D;(1,)</span><br><span class="line">print(t)</span><br></pre></td></tr></table></figure></li><li><p>返回元组最大值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">score&#x3D;(78,59,86,95,100)</span><br><span class="line">print(max(score))</span><br></pre></td></tr></table></figure></li><li><p>字典（Dictionary）</p></li></ol><ul><li>字典是另一种可变容器模型，而且可以存储任意类型对象。字典的每一个键值（key=&gt;value）对用冒号（:）分割，每个对之间用逗号(,)分割，整个字典包括在花括号｛｝中<br>d={key1 :value1,key2 :value2,key3 :value3}<br>键必须是唯一的，但值则不必。值可以取任何数据类型，但键必须是不可变的。</li><li>定义访问字典<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student&#x3D;&#123;1:&quot;Jack&quot;,2:&quot;Mike&quot;,3:&quot;Mike&quot;,4:&quot;Anna&quot;&#125;</span><br><span class="line">print(student[2])</span><br></pre></td></tr></table></figure></li></ul><ol start="15"><li>添加元素<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student[5]&#x3D;&quot;Rose&quot;</span><br><span class="line">print(student)</span><br></pre></td></tr></table></figure></li><li>修改元素<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">student[2]&#x3D;&quot;Marry&quot;</span><br><span class="line">print(student)</span><br></pre></td></tr></table></figure></li><li>删除字典<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">del student[1]</span><br><span class="line">student.clear()</span><br></pre></td></tr></table></figure></li><li>del student<br><code>print(student)</code></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;自动化测试&quot;&gt;&lt;a href=&quot;#自动化测试&quot; class=&quot;headerlink&quot; title=&quot;自动化测试&quot;&gt;&lt;/a&gt;自动化测试&lt;/h2&gt;&lt;p&gt;open 打开网址 Target&lt;br&gt;click 点击 Target(id=kw ) （定位要点击的ID）&lt;br&gt;type 输入内容 Target (id=kw ) Value (要输入的内容)&lt;br&gt;click Target（id=su）&lt;br&gt;refresh 刷新 没有参数&lt;br&gt;goBack 返回&lt;br&gt;pause 暂停 Target(5000)单位为毫秒&lt;br&gt;windowMaximize 窗口最大化&lt;br&gt;select模拟人工单击下拉列表框 value(里面填定位到的值) label(里面填真实的值)&lt;br&gt;例：select Target name=CookieDate Value label=留一天&lt;br&gt;  clickAndWait（单击事件导致新的页面进行加载） css=input.lobtn&lt;br&gt;close 关闭&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Python" scheme="https://www.leavel.cn/tags/Python/"/>
    
      <category term="测试" scheme="https://www.leavel.cn/tags/%E6%B5%8B%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>Oracle数据库导入备份</title>
    <link href="https://www.leavel.cn/article/20200724.html"/>
    <id>https://www.leavel.cn/article/20200724.html</id>
    <published>2020-07-24T01:11:05.000Z</published>
    <updated>2021-04-25T12:49:24.580Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Oracle数据库导入备份"><a href="#Oracle数据库导入备份" class="headerlink" title="Oracle数据库导入备份"></a>Oracle数据库导入备份</h3><ul><li>以sys用户登录名为Test01 的数据库<br><code>sqlplus sys/sys@Test01 as sysdba;</code><a id="more"></a> </li><li>删除其中的用户<br><code>drop user leo cascade;</code></li><li>创建用户<br><code>CREATE USER &quot;LEO&quot; PROFILE &quot;DEFAULT&quot; IDENTIFIED BY &quot;leo&quot; DEFAULT TABLESPACE &quot;USERS&quot; TEMPORARY TABLESPACE &quot;TEMP&quot; ACCOUNT UNLOCK;</code></li><li>连接权限给用户<br><code>GRANT &quot;CONNECT&quot; TO &quot;LEO&quot;;</code>    </li><li>授予管理员权限<br><code>GRANT &quot;DBA&quot; TO &quot;LEO&quot;</code>    </li><li>退出<br><code>exit;</code></li><li>导入数据库备份文件<br><code>impdp leo/leo@Test01 directory=dump_dir dumpfile=ORACLEDATE2020.DMP schemas=leo</code><br>  dump_dir为备份文件存放路径<br>  ORACLEDATE2020.DMP为备份文件名<br>  <img src= "/img/loading.gif" data-src="https://i.niupic.com/images/2020/07/23/8rLL.jpg" alt=""></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Oracle数据库导入备份&quot;&gt;&lt;a href=&quot;#Oracle数据库导入备份&quot; class=&quot;headerlink&quot; title=&quot;Oracle数据库导入备份&quot;&gt;&lt;/a&gt;Oracle数据库导入备份&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;以sys用户登录名为Test01 的数据库&lt;br&gt;&lt;code&gt;sqlplus sys/sys@Test01 as sysdba;&lt;/code&gt;
    
    </summary>
    
    
    
      <category term="Oracle" scheme="https://www.leavel.cn/tags/Oracle/"/>
    
  </entry>
  
  <entry>
    <title>Markdown语法</title>
    <link href="https://www.leavel.cn/article/20200723.html"/>
    <id>https://www.leavel.cn/article/20200723.html</id>
    <published>2020-07-23T05:07:06.000Z</published>
    <updated>2021-04-25T12:47:51.409Z</updated>
    
    <content type="html"><![CDATA[<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3><p>要加粗的文字左右分别用两个星号包起来<br>要倾斜的文字左右分别用一个星号包起来<br>要倾斜和加粗的文字左右分别用三个星号包起来<br>要加删除线的文字左右分别用两个波浪号~包起来</p><a id="more"></a> <h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><p>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。<br>注：标准语法一般在#后跟个空格再写文字</p><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;</p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p>三个或者三个以上的 - 或者 * 都可以。</p><hr><hr><hr><hr><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](https:&#x2F;&#x2F;i.niupic.com&#x2F;images&#x2F;2020&#x2F;07&#x2F;23&#x2F;8rLL.jpg)</span><br></pre></td></tr></table></figure><h3 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[超链接名](超链接地址 &quot;超链接title&quot;)</span><br></pre></td></tr></table></figure><p><a href="http://jianshu.com" target="_blank" rel="noopener">简书</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a><br><a href="http://github.com" target="_blank" rel="noopener">Github</a></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><h5 id="无序列表用-任何一种都可以"><a href="#无序列表用-任何一种都可以" class="headerlink" title="无序列表用 - + * 任何一种都可以"></a>无序列表用 - + * 任何一种都可以</h5><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><h5 id="有序列表-数字加点-序号跟内容之间要有空格"><a href="#有序列表-数字加点-序号跟内容之间要有空格" class="headerlink" title="有序列表 数字加点(序号跟内容之间要有空格)"></a>有序列表 数字加点(序号跟内容之间要有空格)</h5><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>前后用一个<code>(反引号)包住</code>Range(“姓名”).Offset(ofs, 0) = name<code>前后用三个</code>(反引号)包住</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function fun()&#123;</span><br><span class="line">     echo &quot;这是一句非常牛逼的代码&quot;;</span><br><span class="line">&#125;</span><br><span class="line">fun();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;字体&quot;&gt;&lt;a href=&quot;#字体&quot; class=&quot;headerlink&quot; title=&quot;字体&quot;&gt;&lt;/a&gt;字体&lt;/h3&gt;&lt;p&gt;要加粗的文字左右分别用两个星号包起来&lt;br&gt;要倾斜的文字左右分别用一个星号包起来&lt;br&gt;要倾斜和加粗的文字左右分别用三个星号包起来&lt;br&gt;要加删除线的文字左右分别用两个波浪号~包起来&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Markdown" scheme="https://www.leavel.cn/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.leavel.cn/article/20200722.html"/>
    <id>https://www.leavel.cn/article/20200722.html</id>
    <published>2020-07-22T06:13:34.000Z</published>
    <updated>2021-04-25T12:32:16.272Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io" target="_blank" rel="noopener" title="Hexo">Hexo</a>! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;http://hexo.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot; title=&quot;Hexo&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Hexo" scheme="https://www.leavel.cn/tags/Hexo/"/>
    
  </entry>
  
</feed>
